; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = io2life_fast
#default_envs = nodemcuv2
#pio run -t uploadfs
data_dir = data
#lib_dir=F:\GitHub\Arduino\libraries
lib_dir = libraries

[common]
local_version = 0.0.0
version = -DBUILD_TAG=${common.local_version}
#MQTT: https://github.com/knolleary/pubsubclient
lib_deps =
#  WifiManager
#  PubSubClient@2.7.0
#  ArduinoJson@6.15.1
  ESP Async WebServer
  ArduinoJson

#the script below regenerates
#the HTML page using webpack
#the config objects
#the certificate store
extra_scripts = scripts/preBuild.py
upload_speed = 460800

[env:io2life_fast]
#platform = espressif8266@1.8.0
#platform = espressif8266@2.0.0
platform = espressif8266@2.6.2
#platform = espressif8266
board_build.f_cpu = 160000000L
framework = arduino
board = nodemcuv2
#upload_speed = 921600
upload_speed = 460800
monitor_speed = 115200

lib_deps = ${common.lib_deps}
src_build_flags = ${common.version}

#available build flags:
#-DREBUILD_HTML #forces a rebuild of the html.h, this is needed if you make modifications to the GUI, or the configuration or dashboard JSON files
#-DREBUILD_CERTS #forces a rebuild of the root certificate store
#-DREBUILD_CONFIG #forces a rebuild of the configuration manager cpp files based on the JSON
#-DREBUILD_DASHBOARD #forces a rebuild of the dashboard cpp files based on the JSON
#-DDOMAIN_LIST=google.com,maakbaas.com #comma separated list of domain names to limit the certificates included
#-DCONFIG_PATH=configuration.json #defines a custom location for your JSON file
#-DDASHBOARD_PATH=dashboard.json #defines a custom location for your JSON file

[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2
framework = arduino
monitor_speed = 115200
upload_speed = 460800

lib_deps =
    ESP Async WebServer
    ArduinoJson

#the script below regenerates
#the HTML page using webpack
#the config objects
#the certificate store
extra_scripts = scripts/preBuild.py

#available build flags:
#-DREBUILD_HTML #forces a rebuild of the html.h, this is needed if you make modifications to the GUI, or the configuration or dashboard JSON files
#-DREBUILD_CERTS #forces a rebuild of the root certificate store
#-DREBUILD_CONFIG #forces a rebuild of the configuration manager cpp files based on the JSON
#-DREBUILD_DASHBOARD #forces a rebuild of the dashboard cpp files based on the JSON
#-DDOMAIN_LIST=google.com,maakbaas.com #comma separated list of domain names to limit the certificates included
#-DCONFIG_PATH=configuration.json #defines a custom location for your JSON file
#-DDASHBOARD_PATH=dashboard.json #defines a custom location for your JSON file
